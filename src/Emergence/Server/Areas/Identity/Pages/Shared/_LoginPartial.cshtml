@using Microsoft.AspNetCore.Identity
@using Emergence.Data.Identity
@using Emergence.Service.Interfaces
@using Emergence.Data.Shared.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var returnUrl = "/";
    if (Context.Request.Query.TryGetValue("returnUrl", out var existingUrl))
    {
        returnUrl = existingUrl;
    }
    User userProfile = null;
    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        userProfile = await UserService.GetUserAsync(user.Id);
    }
}

@if (SignInManager.IsSignedIn(User))
{
    if (userProfile != null && userProfile.Photo != null)
    {
        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            <img srcset="@(userProfile.Photo.LargeUri) 3x, @(userProfile.Photo.MediumUri) 2x, @(userProfile.Photo.ThumbnailUri) 1x" src="@(userProfile.Photo.OriginalUri)"
                 onerror="this.onerror=null;this.srcset='';this.src='@(Model.ProfilePhoto.OriginalUri)'" alt="Profile photo of @(userProfile?.FirstName ?? User.Identity.Name)"
                 style="max-width:45px;border-radius:50%" class="shadow-sm align-center" />
        </a>
    }
    else
    {
        <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @(userProfile?.FirstName ?? User.Identity.Name)!</a>
    }

    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/" method="post">
        <button type="submit" class="nav-link btn btn-link">Log out</button>
    </form>
}
else
{
    <a asp-area="Identity" asp-page="/Account/Register" asp-route-returnUrl="@returnUrl">Register</a>
    <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@returnUrl">Login</a>
}
