@page "/plantinfo/list"
@using Emergence.Client.Components
@using Emergence.Client.Pages.PlantInfos
@using Emergence.Client.Pages.Origins

@inherits ListPlantInfosComponent

@if (!IsItemLoaded)
{
    @if (ShowSearch)
    {
        <input type="text" @bind="SearchText" id="search" />
        <button class="btn btn-secondary" @onclick="SearchAsync">Search</button>
    }

    @if (List != null)
    {
        <table>
            <SortableHeaders HeaderNames="@(
                                new Dictionary<string, string>
                                {
                                    { "ScientificName", "Scientific Name" },
                                    { "CommonName", "Common Name" },
                                    { "Origin", "Origin" },
                                    { "Zone", "Zone" },
                                    { "Light", "Light" },
                                    { "Water", "Water" },
                                    { "BloomTime", "Bloom Time" },
                                    { "Height", "Height" },
                                    { "Spread", "Spread" }
                                })"
                             Sort="SortAsync"
                             @bind-Values="List" />
            @if (!List.Any())
            {
                <tr>
                    <td>
                        <span>No plant profiles found</span>
                    </td>
                </tr>
            }
            @foreach (var plantInfo in List)
            {
                <tr>
                    <td>
                        <a href="" @onclick="() => LoadInfo(ViewItemType.PlantInfo, plantInfo.PlantInfoId)" @onclick:preventDefault><span class="link">@plantInfo.Lifeform.ScientificName</span></a>
                    </td>
                    <td>
                        <span>@plantInfo.CommonName</span>
                    </td>
                    <td>
                        @if (plantInfo.Origin != null)
                        {
                        <span @onclick="@(() => LoadInfo(ViewItemType.Origin, plantInfo.Origin.OriginId))" class="link">@plantInfo.Origin?.Name</span>
                        }
                        else
                        {
                        <span></span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.Requirements?.ZoneRequirements != null)
                        {
                            <span>@plantInfo.Requirements.ZoneRequirements.ToFriendlyString()</span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.Requirements?.LightRequirements != null)
                        {
                            <span>@plantInfo.Requirements.LightRequirements.ToFriendlyString()</span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.Requirements?.WaterRequirements != null)
                        {
                            <span>@plantInfo.Requirements.WaterRequirements.ToFriendlyString()</span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.BloomTime != null)
                        {
                            <span>@plantInfo.BloomTime.ToFriendlyString()</span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.Height != null)
                        {
                            <span>@plantInfo.Height.ToFriendlyString()</span>
                        }
                    </td>
                    <td>
                        @if (plantInfo.Spread != null)
                        {
                            <span>@plantInfo.Spread.ToFriendlyString()</span>
                        }
                    </td>
                </tr>
            }
        </table>
        <div>
            @if (List.Any())
            {
                <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
            }
            @if (!string.IsNullOrEmpty(UserId))
            {
                <button class="btn btn-primary" @onclick="@(() => LoadInfo(ViewItemType.PlantInfo, 0))"><span class="oi oi-plus btn-oi"></span>Plant Profile</button>
            }
        </div>
    }
}
else if (Id > 0 || IsItemLoaded)
{
    switch (ViewItemType)
    {
        case (ViewItemType.PlantInfo):
            <PlantInfoViewer RefreshList="RefreshAsync" @bind-Id="Id" @bind-IsItemLoaded="IsItemLoaded" @bind-List="List"></PlantInfoViewer>
            break;
        case (ViewItemType.Origin):
            <OriginViewer @bind-Id="Id" @bind-IsItemLoaded="IsItemLoaded" />
            break;
        default:
            break;
    }
}
