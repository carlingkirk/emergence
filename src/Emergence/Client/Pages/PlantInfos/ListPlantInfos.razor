@page "/plantinfo/list"
@using Emergence.Client.Components
@using Emergence.Client.Pages.Origins

@inherits ListPlantInfosComponent

@if (!IsItemLoaded)
{
<form @onsubmit="SearchAsync">
    @if (ShowSearch)
    {
        <input type="text" @bind="SearchText" id="search" />
        <button class="btn btn-primary" type="submit">Search</button>
        <input type="checkbox" class="check-lg" @bind="ShowPublic" id="show-public" />
        <label for="show-public">Show Public</label>
    }
    <input type="checkbox" class="check-lg" @bind="ListView" id="list-view" />
    <label for="list-view">List View</label>

    @if (List != null)
    {
        @if (ListView)
        {
            <table>
                <SortableHeaders HeaderNames="Headers" Sort="SortAsync" @bind-Values="List" />
                @if (!List.Any())
                {
                    <tr><td><span>No plant profiles found</span></td></tr>
                }
                @foreach (var plantInfo in List)
                {
                    <tr>
                        <td>
                            <a href="" @onclick="() => LoadInfo(ViewItemType.PlantInfo, plantInfo.PlantInfoId)" @onclick:preventDefault><span class="link">@plantInfo.Lifeform.ScientificName</span></a>
                        </td>
                        <td>
                            <span>@plantInfo.Lifeform.CommonName</span>
                        </td>
                        <td>
                            @if (plantInfo.Origin != null)
                            {
                                <span @onclick="@(() => LoadInfo(ViewItemType.Origin, plantInfo.Origin.OriginId))" class="link">@(plantInfo.Origin != null ? plantInfo.Origin?.Name ?? "(No name)" : null)</span>
                            }
                            else
                            {
                                <span></span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.Requirements?.ZoneRequirements != null)
                            {
                                <span>@plantInfo.Requirements.ZoneRequirements.ToFriendlyString()</span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.Requirements?.LightRequirements != null)
                            {
                                <span>@plantInfo.Requirements.LightRequirements.ToFriendlyString()</span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.Requirements?.WaterRequirements != null)
                            {
                                <span>@plantInfo.Requirements.WaterRequirements.ToFriendlyString()</span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.BloomTime != null)
                            {
                                <span>@plantInfo.BloomTime.ToFriendlyString()</span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.Height != null)
                            {
                                <span>@plantInfo.Height.ToFriendlyString()</span>
                            }
                        </td>
                        <td>
                            @if (plantInfo.Spread != null)
                            {
                                <span>@plantInfo.Spread.ToFriendlyString()</span>
                            }
                        </td>
                    </tr>
                }
            </table>
        }
        else
        {
            <div class="container">
                <div class="row">
                    @if (!List.Any())
                    {
                    <span>No plant profiles found</span>
                    }
                    @foreach (var plantInfo in List)
                    {
                        var photo = plantInfo.Photos?.FirstOrDefault();

                        <Card Name="@plantInfo.Lifeform.ScientificName" ColorSearch="@plantInfo.Lifeform.CommonName" Photo="@photo">
                            <Content>
                                <a href="" @onclick="() => LoadInfo(ViewItemType.PlantInfo, plantInfo.PlantInfoId)" @onclick:preventDefault>
                                    <div class="col-12">
                                        <span class="link">@plantInfo.Lifeform.CommonName</span>
                                    </div>
                                    <div class="col-12">
                                        <span style="font-style:italic">@plantInfo.Lifeform.ScientificName</span>
                                    </div>
                                </a>
                                @if (!string.IsNullOrEmpty(plantInfo.Requirements?.ZoneRequirements.ToFriendlyString()))
                                {
                                    <div class="col-12">
                                        <span>Zones @plantInfo.Requirements.ZoneRequirements.ToFriendlyString()</span>
                                    </div>
                                }
                                <div class="col-12">
                                    <span>@plantInfo.Requirements.LightRequirements.ToFriendlyString()</span>
                                </div>
                                <div class="col-12">
                                    <span>by @plantInfo.User.DisplayName</span>
                                </div>
                            </Content>
                        </Card>
                    }
                </div>
            </div>
        }
        <div>
            @if (List.Any())
            {
                <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
            }
            @if (!string.IsNullOrEmpty(UserId))
            {
                <button type="button" class="btn btn-primary" @onclick="@(() => LoadInfo(ViewItemType.PlantInfo, 0))"><span class="oi oi-plus btn-oi"></span>Plant Profile</button>
            }
        </div>
    }
</form>
}
else if (Id > 0 || IsItemLoaded)
{
    switch (ViewItemType)
    {
        case (ViewItemType.PlantInfo):
            <PlantInfoViewer RefreshList="RefreshAsync" @bind-Id="Id" @bind-IsItemLoaded="IsItemLoaded" @bind-List="List"></PlantInfoViewer>
            break;
        case (ViewItemType.Origin):
            <OriginViewer @bind-Id="Id" @bind-IsItemLoaded="IsItemLoaded" />
            break;
        default:
            break;
    }
}
