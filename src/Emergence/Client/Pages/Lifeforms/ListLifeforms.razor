@page "/lifeform/list"
@using Emergence.Client.Components

@inherits ListLifeformsComponent

@if (!IsItemLoaded)
{
<form @onsubmit="SearchAsync">
    @if (ShowSearch)
    {
        <input type="text" @bind="SearchText" id="search" />
        <button class="btn btn-primary" type="submit">Search</button>
    }

    @if (List != null)
    {
        <table>
            <SortableHeaders HeaderNames="@(
                            new Dictionary<string, string>
                            {
                                        { "ScientificName", "Scientific Name" },
                                        { "CommonName", "Common Name" }
                            })"
                             Sort="SortAsync"
                             @bind-Values="List" />
            @if (!List.Any())
            {
                <tr>
                    <td>
                        <span>No lifeforms found</span>
                    </td>
                </tr>
            }
            @foreach (var lifeform in List)
            {
                <tr>
                    <td>
                        <a href="" @onclick="() => LoadInfo(ViewItemType.Lifeform, lifeform.LifeformId)" @onclick:preventDefault><span class="link">@lifeform.ScientificName</span></a>
                    </td>
                    <td>
                        <span>@lifeform.CommonName</span>
                    </td>
                </tr>
            }
        </table>
        <div>
            @if (List.Any())
            {
                <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
            }
        </div>
    }
</form>
}
else if (Id > 0 || IsItemLoaded)
{
    switch (ViewItemType)
    {
        case (ViewItemType.Lifeform):
            <LifeformViewer RefreshList="RefreshAsync" @bind-Id="Id" @bind-IsItemLoaded="IsItemLoaded" @bind-List="List"></LifeformViewer>
            break;
        default:
            break;
    }
}

@code {

}
