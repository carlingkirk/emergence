@page "/origin/list"
@using Emergence.Client.Components
@using Emergence.Data.Shared.Extensions;
@inherits ListOriginsComponent

@if (ShowSearch)
{
    <input type="text" @bind="SearchText" id="search" />
    <button class="btn btn-secondary" @onclick="SearchAsync">Search</button>
}

@if (List != null)
{
    <table>
        <SortableHeaders HeaderNames="@(
                new Dictionary<string, string>
                {
                    { "Name", "Name" },
                    { "Type", "Type" },
                    { "Description", "Description" },
                    { "ParentOrigin", "Parent Origin" },
                    { "City", "City" },
                    { "Link", "Link" }
                })"
                         Sort="SortAsync"
                         @bind-Values="List" />
        @if (!List.Any())
        {
            <tr>
                <td>
                    <span>No origins found</span>
                </td>
            </tr>
        }
        @foreach (var origin in List)
        {
            <tr>
                <td>
                    <span @onclick="@(async () => await UpdateOriginAsync(origin))" class="link">@origin.Name</span>
                </td>
                <td>
                    <span>@origin.Type.ToFriendlyName()</span>
                </td>
                <td>
                    <span>@origin.Description</span>
                </td>
                <td>
                    @if (@origin.ParentOrigin != null)
                    {
                        <span @onclick="@(async () => await UpdateParentOriginAsync(origin.ParentOrigin))" class="link">@origin.ParentOrigin.Name</span>
                    }
                </td>
                <td>
                    <span>@(origin.Location?.CityState)</span>
                </td>
                <td>
                    <span>
                        @if (@origin.Uri != null)
                        {
                            <a href="@origin.Uri" target="_blank"><span>@origin.Uri.ToString()</span></a>
                        }
                    </span>
                </td>
            </tr>
        }
    </table>
    <div>
        <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
        <button class="btn btn-primary" @onclick="@(() => ModalServiceClient.ShowOriginModal(0))"><span class="oi oi-plus btn-oi"></span>Origin</button>
    </div>
}
