@page "/activity/list"
@using Emergence.Client.Components
@using Emergence.Data.Shared.Extensions;
@using Emergence.Client.Common
@inherits ListActivitiesComponent
@inject IModalServiceClient ModalServiceClient
<input type="text" @bind="SearchText" id="search" />
<button class="btn btn-secondary" @onclick="FindAsync">Search</button>
@if (List != null)
{
    <table>
        <SortableHeaders
            HeaderNames="@(
                new Dictionary<string, string>
                {
                    { "Name", "Name" },
                    { "ScientificName", "Scientific Name" },
                    { "ActivityType", "Activity Type" },
                    { "DateOccured", "Date Occured" },
                    { "DateScheduled", "Date Scheduled" }
                })"
            Sort="SortAsync"
            @bind-Values="List" />
        @if (!List.Any())
        {
            <tr>
                <td>
                    No results
                </td>
            </tr>
        }
        @foreach (var activity in List)
        {
            <tr>
                <td>
                    <span @onclick="@(async () => await UpdateActivityAsync(activity))" class="link">@activity.Name</span>
                </td>
                <td>
                    <span>@activity.Specimen.Lifeform.ScientificName</span>
                </td>
                <td>
                    <span>@activity.ActivityType.ToFriendlyName()</span>
                </td>
                <td>
                    <span>
                        @(activity.DateOccured.HasValue ?
                            activity.DateOccured.Value.ToLocalTime().ToShortDateString() : "")
                    </span>
                </td>
                <td>
                    <span>
                        @(activity.DateScheduled.HasValue ?
                            activity.DateScheduled.Value.ToLocalTime().ToShortDateString() : "")
                    </span>
                </td>
            </tr>
        }
    </table>
    <div>
        <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
        <button class="btn btn-primary" @onclick="@(() => ModalServiceClient.ShowActivityModal(0))">Add New Activity</button>
    </div>
}
