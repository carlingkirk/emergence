@page "/activity/list"
@using Emergence.Client.Components
@using Emergence.Data.Shared.Extensions;
@using Data.Shared.Models;
@inherits ListActivitiesComponent
<input type="text" @bind="SearchText" id="search" />
<button class="btn btn-secondary" @onclick="FindActivitiesAsync">Search</button>
@if (Activities != null)
{
    <table>
        <thead>
            <tr>
                <td @onclick="@(async () => await SortActivitiesAsync("Name"))" class="sortable">
                    <span class="@GetSortClass("Name")"></span><span>Name</span>
                </td>
                <td @onclick="@(async () => await SortActivitiesAsync("ScientificName"))" class="sortable">
                    <span class="@GetSortClass("ScientificName")"></span><span>Scientific Name</span>
                </td>
                <td @onclick="@(async () => await SortActivitiesAsync("ActivityType"))" class="sortable">
                    <span class="@GetSortClass("ActivityType")"></span><span>Type</span>
                </td>
                <td @onclick="@(async () => await SortActivitiesAsync("DateOccured"))" class="sortable">
                    <span class="@GetSortClass("DateOccured")"></span><span>Date Occured</span>
                </td>
                <td @onclick="@(async () => await SortActivitiesAsync("DateScheduled"))" class="sortable">
                    <span class="@GetSortClass("DateScheduled")"></span><span>Date Scheduled</span>
                </td>
            </tr>
        </thead>
        @if (!Activities.Any())
        {
            <tr>
                <td>
                    No results
                </td>
            </tr>
        }
        @foreach (var activity in Activities)
        {
    <tr>
        <td>
            <a href="/activity/edit/@activity.ActivityId"><span>@activity.Name</span></a>
        </td>
        <td>
            <span>@activity.Specimen.Lifeform.ScientificName</span>
        </td>
        <td>
            <span>@activity.ActivityType.ToFriendlyName()</span>
        </td>
        <td>
            <span>
                @(activity.DateOccured.HasValue ?
                            activity.DateOccured.Value.ToLocalTime().ToShortDateString() : "")
            </span>
        </td>
        <td>
            <span>
                @(activity.DateScheduled.HasValue ?
                            activity.DateScheduled.Value.ToLocalTime().ToShortDateString() : "")
            </span>
        </td>
    </tr>
        }
    </table>
}

@code {

}
