@page "/specimen/{Id:int}"
@using Emergence.Client.Components
@using Emergence.Client.Pages.Activities

@inherits SpecimenComponent
@inject IModalServiceClient ModalServiceClient

<div class="card-header h3">
    @if (!IsModal)
    {
        <button type="button" class="btn btn-primary" @onclick="Back">Back</button>
    }
    <span class="title">Specimen: </span>
    @if (SelectedLifeform != null && (!string.IsNullOrEmpty(SelectedLifeform.ScientificName) || !string.IsNullOrEmpty(SelectedLifeform.CommonName)))
    {
        <span>@SelectedLifeform.CommonName</span><span class="font-italic"> (@SelectedLifeform.ScientificName)</span>
    }
    else
    {
        <span class="font-italic">New</span>
    }
</div>
<div class="group">
    @if (IsEditing && Specimen != null)
    {
        @if (RefreshList != null)
        {
            <EditSpecimen Cancel="GoBack" RefreshList="RefreshList" Specimen="Specimen" @bind-IsEditing="IsEditing" @bind-IsItemLoaded="IsItemLoaded" @bind-List="List" />
        }
        else
        {
            <EditSpecimen Cancel="GoBack" Specimen="Specimen" @bind-IsEditing="IsEditing" @bind-IsItemLoaded="IsItemLoaded" />
        }
    }
    else if (Specimen != null)
    {
        <ViewSpecimen Specimen="Specimen" @bind-IsEditing="IsEditing" @bind-IsItemLoaded="IsItemLoaded" />
    }
    else
    {
        <span>Loading...</span>
    }
    @if (IsOwner && !IsEditing && Specimen != null && Specimen.SpecimenId > 0)
    {
        <button type="button" class="btn btn-primary" @onclick="() => IsEditing = true">Edit</button>
        <button type="button" class="btn btn-primary" @onclick="async () => await RemoveSpecimen()">Delete</button>
    }
    @if (!IsOwner)
    {
        <button type="button" class="btn btn-primary" @onclick="@(async () => await ModalServiceClient.ShowMessageModal(GetMessage(), false))">
            <span class="oi oi-plus btn-oi"></span>Message
        </button>
    }
</div>
@if (!IsEditing && Specimen != null)
{
<div class="group">
    <div class="form-group">
        <div class="row">
            <div class="col">
                <label for="activities">Activities</label>
                <ListActivities Specimen="Specimen" ShowSearch="false" LinkRelations="false" />
            </div>
        </div>
    </div>
</div>
}
@code {

    protected async Task GoBack()
    {
        if (Specimen.SpecimenId == 0)
        {
            await IsItemLoadedChanged.InvokeAsync(false);
        }
    }
}
