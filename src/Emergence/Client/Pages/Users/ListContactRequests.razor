@using Emergence.Client.Components
@inject IModalServiceClient ModalServiceClient
@inherits ListContactRequestsComponent

@if (!IsItemLoaded)
{
    <form @onsubmit="SearchAsync">
        @if (ShowSearch)
        {
            <input type="text" @bind="SearchText" id="search" />
            <button class="btn btn-primary" type="submit">Search</button>
        }

        @if (List != null)
        {
    <div class="group">
        <table>
            <SortableHeaders HeaderNames="@(
                            new Dictionary<string, string>
                            {
                                { "DisplayName", "Display Name" },
                                { "DateRequested", "Date Requested" }
                            })"
                             Sort="SortAsync"
                             @bind-Values="List" />
            @if (!List.Any())
            {
                <tr>
                    <td>
                        <span>No contact requests found</span>
                    </td>
                </tr>
            }
            @foreach (var contact in List)
            {
                <tr>
                    <td style="padding: .5rem;">
                        <a href="" @onclick="async () => await ModalServiceClient.ShowUserModal(contact.ContactUser)" @onclick:preventDefault>
                            <UserDisplay User="contact.ContactUser" Size="35" />
                        </a>
                    </td>
                    <td>
                        <span>@contact.DateRequested.ToLocalTime().ToShortDateString()</span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-primary" @onclick="async () => await AddContactAsync(contact)"><span class="oi oi-plus btn-oi"></span>Accept</button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-secondary" @onclick="async () => await RemoveContactRequestAsync(contact)">
                            <span class="oi oi-x btn-oi"></span>Reject
                        </button>
                    </td>
                </tr>
            }
        </table>
        <div>
            @if (List.Any())
            {
                <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
            }
        </div>
    </div>
        }
    </form>
}

@code {

}
