@page "/plantinfo/list"
@using Emergence.Client.Components
@using Emergence.Data.Shared.Extensions;
@inherits ListPlantInfosComponent
@inject IModalServiceClient ModalServiceClient
<input type="text" @bind="SearchText" id="search" />
<button class="btn btn-secondary" @onclick="FindAsync">Search</button>
@if (List != null)
{
    <table>
        <SortableHeaders
            HeaderNames="@(
                new Dictionary<string, string>
                {
                    { "ScientificName", "Scientific Name" },
                    { "CommonName", "Common Name" },
                    { "Origin", "Origin" },
                    { "Zone", "Zone" },
                    { "Light", "Light" },
                    { "Water", "Water" },
                    { "BloomTime", "Bloom Time" },
                    { "Height", "Height" },
                    { "Spread", "Spread" }
                })"
            Sort="SortAsync"
            @bind-Values="List" />
        @if (!List.Any())
        {
            <tr>
                <td>
                    No results
                </td>
            </tr>
        }
        @foreach (var plantInfo in List)
        {
            <tr>
                <td>
                    <span @onclick="@(async () => await UpdatePlantInfoAsync(plantInfo))" class="link">@plantInfo.Lifeform.ScientificName</span>
                </td>
                <td>
                    <span>@plantInfo.CommonName</span>
                </td>
                <td>
                    <span @onclick="@(async () => await UpdateOriginAsync(plantInfo.Origin))" class="link">@plantInfo.Origin.Name</span>
                </td>
                <td>
                    @if (plantInfo.Requirements?.ZoneRequirements != null)
                    {
                        <span>@plantInfo.Requirements.ZoneRequirements.ToFriendlyString()</span>
                    }
                </td>
                <td>
                    @if (plantInfo.Requirements?.LightRequirements != null)
                    {
                        <span>@plantInfo.Requirements.LightRequirements.ToFriendlyString()</span>
                    }
                </td>
                <td>
                    @if (plantInfo.Requirements?.WaterRequirements != null)
                    {
                        <span>@plantInfo.Requirements.WaterRequirements.ToFriendlyString()</span>
                    }
                </td>
                <td>
                    @if (plantInfo.BloomTime != null)
                    {
                        <span>@plantInfo.BloomTime.ToFriendlyString()</span>
                    }
                </td>
                <td>
                    @if (plantInfo.Height != null)
                    {
                        <span>@plantInfo.Height.ToFriendlyString()</span>
                    }
                </td>
                <td>
                    @if (plantInfo.Spread != null)
                    {
                        <span>@plantInfo.Spread.ToFriendlyString()</span>
                    }
                </td>
            </tr>
        }
    </table>
    <div>
        <Pager Page="PageAsync" @bind-Values="List" Count="@Count" Take="@Take" CurrentPage="@CurrentPage"></Pager>
        <button class="btn btn-primary" @onclick="@(() => ModalServiceClient.ShowPlantInfoModal(0))">Add New Plant Info</button>
    </div>
}
