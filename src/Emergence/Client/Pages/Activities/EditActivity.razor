@page "/activity/edit/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Emergence.Data.Shared.Models
@using Emergence.Data.Shared
@using Emergence.Client.Components
@using Emergence.Client.Common
@using Emergence.Data.Shared.Extensions
@using Blazored.Typeahead

@attribute [Authorize]
@inherits EditActivityComponent

@if (Activity != null)
{
    <EditForm Model="@Activity">
        <div class="form-group container">
            <div class="row">
                <div class="col-lg-3 col-xs">
                    <label for="type">Type</label>
                    <select @bind="@Activity.ActivityType" type="text" class="form-control" id="type">
                        @foreach (var type in ActivityTypes)
                        {
                            <option value="@type">@type.ToFriendlyName()</option>
                        }
                    </select>
                </div>
                <div class="col-lg-9 col-xs">
                    <label for="specimen">Specimen</label>
                    <BlazoredTypeahead SearchMethod="FindSpecimensAsync"
                                       @bind-Value="SelectedSpecimen"
                                       MinimumLength="3"
                                       Debounce="500" Context="specimen">
                        <SelectedTemplate>
                            <span>
                                @(specimen.InventoryItem?.Name) - @(specimen.InventoryItem?.Quantity) @(specimen.SpecimenStage.ToFriendlyName())
                                (@(specimen.InventoryItem?.Status.ToFriendlyName()))
                            </span>
                        </SelectedTemplate>
                        <ResultTemplate>
                            @if (specimen.SpecimenId == 0 && specimen.Lifeform != null)
                                {
                                <a href="" @onclick="@(async () => { await AddSpecimenAsync((Specimen)specimen); })" @onclick:preventDefault>
                                    <span>Add new </span>
                                    <span class="text-body">@(specimen.Lifeform.CommonName) </span>
                                    <span class="text-body font-italic">@(specimen.Lifeform.ScientificName) </span>
                                </a>
                                }
                                else if (specimen.InventoryItem != null)
                                {
                                <span>
                                    @(specimen.InventoryItem?.Name) - @(specimen.InventoryItem?.Quantity) @(specimen.SpecimenStage.ToFriendlyName())
                                    (@(specimen.InventoryItem?.Status.ToFriendlyName()))
                                </span>
                                }
                                else // this won't happen?
                            {
                                <span>@specimen.SpecimenId.ToString();</span>
                                }
                        </ResultTemplate>
                        <NotFoundTemplate>
                            No results found
                        </NotFoundTemplate>
                    </BlazoredTypeahead>

                </div>
            </div>
            @if (SelectedSpecimen != null)
            {
                <div class="row">
                    <div class="col-lg-3 col-xs">
                        <label for="quantity">Quantity</label>
                        <input @bind="@Activity.Quantity" type="text" class="form-control" id="quantity" disabled="@(SelectedSpecimen == null)" />
                    </div>
                    @if (Activity.ActivityType == ActivityType.PlantInGround || Activity.ActivityType == ActivityType.Germination || Activity.ActivityType == ActivityType.Stratification)
                    {
                        <div class="col-lg-9 col-xs">
                            <label for="create-new-specimen">Create new specimen</label>
                            <div style="display: block;">
                                <input type="checkbox" @bind="CreateNewSpecimen" id="create-new-specimen" style="width:1.25em;height:1.25em;position:relative;top:5px;" />
                                @if (CreateNewSpecimen && SelectedSpecimen?.InventoryItem?.Quantity > 0)
                                {
                                    <label for="enable-quantity-update">
                                        Original specimen quantity will be reduced
                                        @if (Activity.Quantity.HasValue && Activity.Quantity.Value > 0)
                                        {
                                            <span>to @(SelectedSpecimen.InventoryItem.Quantity - Activity.Quantity)</span>
                                        }
                                    </label>
                                }
                                else if (!CreateNewSpecimen && Activity.Quantity.HasValue)
                                {
                                    <label for="enable-quantity-update">Original specimen quantity will not be updated</label>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            <div class="row">
                <div class="col">
                    <label for="name">Activity Title</label>
                    <input @bind="@Activity.Name" type="text" class="form-control" id="name" @onfocus="PopulateActivityName" />
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="description">Description</label>
                    <textarea @bind="@Activity.Description" type="text" class="form-control" id="description" />
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <label for="date-occured">Date Occured</label>
                    <input @bind="@Activity.DateOccured" type="date" class="form-control" id="date-occured" />
                </div>
                <div class="col">
                    <label for="date-scheduled">Date Scheduled</label>
                    <input @bind="@Activity.DateScheduled" type="date" class="form-control" id="date-scheduled" />
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <UploadPhoto @bind-UploadedPhotos="UploadedPhotos" PhotoType="PhotoType.Activity" />
                </div>
            </div>
        </div>
        <div class="form-group container">
            <div class="row">
                <div class="col">
                    <button @onclick="(async () => await SaveActivityAsync())" class="btn btn-primary">Save</button>
                    @if (BlazoredModal != null)
                    {
                        <button @onclick="BlazoredModal.Cancel" class="btn btn-secondary">Cancel</button>
                    }
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <span>Loading...</span>
}

@code {

}
